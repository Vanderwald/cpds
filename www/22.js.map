{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es5/build/7oweqjmw.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kCAAkC;AACvE;AACA;AACA,gCAAgC,2CAA2C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,4DAAmB,4BAA4B,qCAAqC;AACzH;AACA;AACA;AACA,0BAA0B,yBAAyB,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,qBAAqB,OAAO,QAAQ,MAAM,SAAS,oBAAoB,oBAAoB,aAAa,kBAAkB,8BAA8B,6BAA6B,uBAAuB,mBAAmB,qBAAqB,iBAAiB,eAAe,0EAA0E,OAAO,QAAQ,MAAM,SAAS,kBAAkB,mBAAmB,WAAW,OAAO,kCAAkC,0BAA0B,UAAU,6GAA6G,oBAAoB,oBAAoB,aAAa,oBAAoB,cAAc,+BAA+B,aAAa,qCAAqC,4BAA4B,kBAAkB,SAAS,+CAA+C,4BAA4B,iBAAiB,QAAQ,gBAAgB,4DAA4D,oDAAoD,gBAAgB,cAAc,2BAA2B,cAAc,8DAA8D,gBAAgB,cAAc,eAAe,0BAA0B,EAAE,EAAE;AACnxC;AACA;AACA,KAAK;AACL;AACA,0BAA0B,cAAc,EAAE;AAC1C;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACqC","file":"22.js","sourcesContent":["import { k as createThemedClasses } from './chunk-b9ec67ac.js';\nvar SPLIT_PANE_MAIN = 'split-pane-main';\nvar SPLIT_PANE_SIDE = 'split-pane-side';\nvar QUERY = {\n    'xs': '(min-width: 0px)',\n    'sm': '(min-width: 576px)',\n    'md': '(min-width: 768px)',\n    'lg': '(min-width: 992px)',\n    'xl': '(min-width: 1200px)',\n    'never': ''\n};\nvar SplitPane = /** @class */ (function () {\n    function SplitPane() {\n        this.visible = false;\n        this.disabled = false;\n        this.when = QUERY['lg'];\n    }\n    SplitPane.prototype.visibleChanged = function (visible) {\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\n        this.ionChange.emit(detail);\n        this.ionSplitPaneVisible.emit(detail);\n    };\n    SplitPane.prototype.componentDidLoad = function () {\n        this.styleChildren();\n        this.updateState();\n    };\n    SplitPane.prototype.componentDidUnload = function () {\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n    };\n    SplitPane.prototype.updateState = function () {\n        var _this = this;\n        if (this.isServer) {\n            return;\n        }\n        if (this.rmL) {\n            this.rmL();\n            this.rmL = undefined;\n        }\n        if (this.disabled) {\n            this.visible = false;\n            return;\n        }\n        var query = this.when;\n        if (typeof query === 'boolean') {\n            this.visible = query;\n            return;\n        }\n        var mediaQuery = QUERY[query] || query;\n        if (mediaQuery.length === 0) {\n            this.visible = false;\n            return;\n        }\n        var callback = function (q) { return _this.visible = q.matches; };\n        var mediaList = this.win.matchMedia(mediaQuery);\n        mediaList.addListener(callback);\n        this.rmL = function () { return mediaList.removeListener(callback); };\n        this.visible = mediaList.matches;\n    };\n    SplitPane.prototype.isPane = function (element) {\n        if (!this.visible) {\n            return false;\n        }\n        return element.parentElement === this.el\n            && element.classList.contains(SPLIT_PANE_SIDE);\n    };\n    SplitPane.prototype.styleChildren = function () {\n        if (this.isServer) {\n            return;\n        }\n        var children = this.el.children;\n        var nu = this.el.childElementCount;\n        var foundMain = false;\n        for (var i = 0; i < nu; i++) {\n            var child = children[i];\n            var isMain = child.hasAttribute('main');\n            if (isMain) {\n                if (foundMain) {\n                    console.warn('split pane can not have more than one main node');\n                    return;\n                }\n                foundMain = true;\n            }\n            setPaneClass(child, isMain);\n        }\n        if (!foundMain) {\n            console.warn('split pane could not found any main node');\n        }\n    };\n    SplitPane.prototype.hostData = function () {\n        return {\n            class: Object.assign({}, createThemedClasses(this.mode, 'split-pane'), { 'split-pane-visible': this.visible })\n        };\n    };\n    Object.defineProperty(SplitPane, \"is\", {\n        get: function () { return \"ion-split-pane\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"properties\", {\n        get: function () {\n            return {\n                \"disabled\": {\n                    \"type\": Boolean,\n                    \"attr\": \"disabled\",\n                    \"watchCallbacks\": [\"updateState\"]\n                },\n                \"el\": {\n                    \"elementRef\": true\n                },\n                \"isServer\": {\n                    \"context\": \"isServer\"\n                },\n                \"visible\": {\n                    \"state\": true,\n                    \"watchCallbacks\": [\"visibleChanged\"]\n                },\n                \"when\": {\n                    \"type\": \"Any\",\n                    \"attr\": \"when\",\n                    \"watchCallbacks\": [\"updateState\"]\n                },\n                \"win\": {\n                    \"context\": \"window\"\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"events\", {\n        get: function () {\n            return [{\n                    \"name\": \"ionChange\",\n                    \"method\": \"ionChange\",\n                    \"bubbles\": false,\n                    \"cancelable\": true,\n                    \"composed\": true\n                }, {\n                    \"name\": \"ionSplitPaneVisible\",\n                    \"method\": \"ionSplitPaneVisible\",\n                    \"bubbles\": true,\n                    \"cancelable\": true,\n                    \"composed\": true\n                }];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"style\", {\n        get: function () { return \".split-pane{left:0;right:0;top:0;bottom:0;display:-webkit-box;display:-ms-flexbox;display:flex;position:absolute;-webkit-box-orient:horizontal;-webkit-box-direction:normal;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-flex:1;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-webkit-box-ordinal-group:0;-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.split-pane-ios{--border:0.55px solid var(--ion-item-border-color, #c8c7cc)}.split-pane-ios.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-ios.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitPane, \"styleMode\", {\n        get: function () { return \"ios\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return SplitPane;\n}());\nfunction setPaneClass(el, isMain) {\n    var toAdd;\n    var toRemove;\n    if (isMain) {\n        toAdd = SPLIT_PANE_MAIN;\n        toRemove = SPLIT_PANE_SIDE;\n    }\n    else {\n        toAdd = SPLIT_PANE_SIDE;\n        toRemove = SPLIT_PANE_MAIN;\n    }\n    var classList = el.classList;\n    classList.add(toAdd);\n    classList.remove(toRemove);\n}\nexport { SplitPane as IonSplitPane };\n"],"sourceRoot":""}