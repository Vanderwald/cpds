{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es5/build/ntlsthn3.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA4E;AAC5E;AACA;AACA,wCAAwC,QAAQ,4DAAU,SAAS,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,QAAQ,4DAAe,SAAS,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,UAAU,EAAE;AACtD;AACA;AACA,2CAA2C,UAAU,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB,EAAE;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,oCAAoC,cAAc,2BAA2B,uBAAuB,EAAE,EAAE;AAClI;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,wBAAwB,EAAE;AACpD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,oCAAoC,cAAc,2BAA2B,uBAAuB,EAAE,EAAE;AAClI;AACA;AACA,KAAK;AACL;AACA,CAAC;AAC2D","file":"104.js","sourcesContent":["import { a as matchBreakpoint, m as isPlatform } from './chunk-e7816c0b.js';\nfunction isPlatformMatch(win, multiPlatformString) {\n    var platforms = split(multiPlatformString);\n    return platforms.some(function (p) { return isPlatform(win, p); });\n}\nfunction isModeMatch(config, multiModeString) {\n    var modes = split(multiModeString);\n    var currentMode = config.get('mode');\n    return modes.includes(currentMode);\n}\nfunction isSizeMatch(win, multiSizeString) {\n    var sizes = split(multiSizeString);\n    return sizes.some(function (s) { return matchBreakpoint(win, s); });\n}\nfunction split(multiOptions) {\n    return multiOptions.replace(/\\s/g, '').split(',');\n}\nfunction getTestResult(displayWhen) {\n    var results = [];\n    if (displayWhen.mediaQuery !== undefined) {\n        results.push(matchMedia(displayWhen.win, displayWhen.mediaQuery));\n    }\n    if (displayWhen.size !== undefined) {\n        results.push(isSizeMatch(displayWhen.win, displayWhen.size));\n    }\n    if (displayWhen.modes !== undefined) {\n        results.push(isModeMatch(displayWhen.config, displayWhen.modes));\n    }\n    if (displayWhen.platform !== undefined) {\n        results.push(isPlatformMatch(displayWhen.win, displayWhen.platform));\n    }\n    if (displayWhen.orientation !== undefined) {\n        results.push(isOrientationMatch(displayWhen.win, displayWhen.orientation));\n    }\n    if (displayWhen.or) {\n        return results.some(function (r) { return r; });\n    }\n    else {\n        return results.every(function (r) { return r; });\n    }\n}\nfunction isOrientationMatch(win, orientation) {\n    if (orientation === 'portrait') {\n        return isPortrait(win);\n    }\n    else if (orientation === 'landscape') {\n        return !isPortrait(win);\n    }\n    return false;\n}\nfunction isPortrait(win) {\n    return matchMedia(win, '(orientation: portrait)');\n}\nfunction matchMedia(win, query) {\n    return win.matchMedia(query).matches;\n}\nvar HideWhen = /** @class */ (function () {\n    function HideWhen() {\n        this.or = false;\n        this.passesTest = false;\n    }\n    HideWhen.prototype.componentWillLoad = function () {\n        this.onResize();\n    };\n    HideWhen.prototype.onResize = function () {\n        this.passesTest = getTestResult(this);\n    };\n    HideWhen.prototype.hostData = function () {\n        return {\n            class: {\n                'show-content': !this.passesTest,\n                'hide-content': this.passesTest\n            }\n        };\n    };\n    Object.defineProperty(HideWhen, \"is\", {\n        get: function () { return \"ion-hide-when\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HideWhen, \"properties\", {\n        get: function () {\n            return {\n                \"config\": {\n                    \"context\": \"config\"\n                },\n                \"element\": {\n                    \"elementRef\": true\n                },\n                \"mediaQuery\": {\n                    \"type\": String,\n                    \"attr\": \"media-query\"\n                },\n                \"modes\": {\n                    \"type\": String,\n                    \"attr\": \"modes\"\n                },\n                \"or\": {\n                    \"type\": Boolean,\n                    \"attr\": \"or\"\n                },\n                \"orientation\": {\n                    \"type\": String,\n                    \"attr\": \"orientation\"\n                },\n                \"passesTest\": {\n                    \"state\": true\n                },\n                \"platform\": {\n                    \"type\": String,\n                    \"attr\": \"platform\"\n                },\n                \"size\": {\n                    \"type\": String,\n                    \"attr\": \"size\"\n                },\n                \"win\": {\n                    \"context\": \"window\"\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HideWhen, \"listeners\", {\n        get: function () {\n            return [{\n                    \"name\": \"window:resize\",\n                    \"method\": \"onResize\",\n                    \"passive\": true\n                }];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(HideWhen, \"style\", {\n        get: function () { return \"ion-hide-when.show-content{display:block}ion-hide-when.hide-content{display:none!important}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return HideWhen;\n}());\nvar ShowWhen = /** @class */ (function () {\n    function ShowWhen() {\n        this.or = false;\n        this.passesTest = false;\n    }\n    ShowWhen.prototype.componentWillLoad = function () {\n        this.onResize();\n    };\n    ShowWhen.prototype.onResize = function () {\n        this.passesTest = getTestResult(this);\n    };\n    ShowWhen.prototype.hostData = function () {\n        return {\n            class: {\n                'show-content': this.passesTest,\n                'hide-content': !this.passesTest\n            }\n        };\n    };\n    Object.defineProperty(ShowWhen, \"is\", {\n        get: function () { return \"ion-show-when\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowWhen, \"properties\", {\n        get: function () {\n            return {\n                \"config\": {\n                    \"context\": \"config\"\n                },\n                \"element\": {\n                    \"elementRef\": true\n                },\n                \"mediaQuery\": {\n                    \"type\": String,\n                    \"attr\": \"media-query\"\n                },\n                \"modes\": {\n                    \"type\": String,\n                    \"attr\": \"modes\"\n                },\n                \"or\": {\n                    \"type\": Boolean,\n                    \"attr\": \"or\"\n                },\n                \"orientation\": {\n                    \"type\": String,\n                    \"attr\": \"orientation\"\n                },\n                \"passesTest\": {\n                    \"state\": true\n                },\n                \"platform\": {\n                    \"type\": String,\n                    \"attr\": \"platform\"\n                },\n                \"size\": {\n                    \"type\": String,\n                    \"attr\": \"size\"\n                },\n                \"win\": {\n                    \"context\": \"window\"\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowWhen, \"listeners\", {\n        get: function () {\n            return [{\n                    \"name\": \"window:resize\",\n                    \"method\": \"onResize\",\n                    \"passive\": true\n                }];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ShowWhen, \"style\", {\n        get: function () { return \"ion-show-when.show-content{display:block}ion-show-when.hide-content{display:none!important}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return ShowWhen;\n}());\nexport { HideWhen as IonHideWhen, ShowWhen as IonShowWhen };\n"],"sourceRoot":""}