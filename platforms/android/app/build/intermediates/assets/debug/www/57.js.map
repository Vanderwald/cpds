{"version":3,"sources":["webpack:///./node_modules/@ionic/core/dist/esm/es5/build/fvg6ydme.sc.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACjD;AACA;AACA;AACA;AACqC;AACiE;AACxB;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,wBAAwB,4DAAU;AAClC;AACA;AACA,eAAe,6DAAiB;AAChC;AACA;AACA,mBAAmB,+DAAmB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8MAAsB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0BAA0B,EAAE;AAChF,mDAAmD,yBAAyB,EAAE;AAC9E,kDAAkD,wBAAwB,EAAE;AAC5E,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,4DAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE,4DAAkB,eAAe,YAAY,4DAAW,+KAA+K;AAC5Q;AACA;AACA;AACA;AACA,QAAQ,4DAAiB;AACzB;AACA,YAAY,wDAAC,SAAS,uBAAuB,EAAE,wDAAC,SAAS,wBAAwB;AACjF,YAAY,wDAAC,WAAW,oRAAoR,8BAA8B,EAAE,EAAE;AAC9U,YAAY,wDAAC;AACb;AACA;AACA;AACA,0BAA0B,qBAAqB,EAAE;AACjD;AACA;AACA,KAAK;AACL;AACA,0BAA0B,iBAAiB,EAAE;AAC7C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,6BAA6B,yCAAyC,iCAAiC,qBAAqB,gBAAgB,eAAe,sBAAsB,kBAAkB,yBAAyB,sBAAsB,qBAAqB,iBAAiB,mEAAmE,2EAA2E,sDAAsD,8DAA8D,aAAa,+BAA+B,uBAAuB,kBAAkB,WAAW,YAAY,eAAe,wDAAwD,yBAAyB,0BAA0B,UAAU,oCAAoC,oBAAoB,WAAW,uBAAuB,OAAO,MAAM,SAAS,kBAAkB,WAAW,YAAY,SAAS,eAAe,eAAe,wBAAwB,qBAAqB,gBAAgB,UAAU,oBAAoB,6EAA6E,8CAA8C,8EAA8E,iCAAiC,8BAA8B,mBAAmB,cAAc,kBAAkB,WAAW,YAAY,wCAAwC,gCAAgC,6BAA6B,oBAAoB,+BAA+B,OAAO,SAAS,kBAAkB,kBAAkB,WAAW,YAAY,gCAAgC,wBAAwB,+DAA+D,uDAAuD,+CAA+C,iEAAiE,oCAAoC,yGAAyG,iGAAiG,uCAAuC,eAAe,mEAAmE,qCAAqC,oEAAoE,wCAAwC,gCAAgC,4CAA4C,kCAAkC,SAAS,2BAA2B,eAAe,wCAAwC,2BAA2B,EAAE,EAAE;AAClnF;AACA;AACA,KAAK;AACL;AACA,0BAA0B,aAAa,EAAE;AACzC;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B","file":"57.js","sourcesContent":["import * as tslib_1 from '../polyfills/tslib.js';\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n * Built with http://stenciljs.com\n */\nimport { h } from '../ionic.core.js';\nimport { f as hapticSelection, h as createColorClasses, j as hostContext } from './chunk-b9ec67ac.js';\nimport { e as deferEvent, f as renderHiddenInput } from './chunk-e7816c0b.js';\nvar Toggle = /** @class */ (function () {\n    function Toggle() {\n        this.inputId = \"ion-tg-\" + toggleIds++;\n        this.pivotX = 0;\n        this.activated = false;\n        this.keyFocus = false;\n        this.name = this.inputId;\n        this.checked = false;\n        this.disabled = false;\n        this.value = 'on';\n    }\n    Toggle.prototype.checkedChanged = function (isChecked) {\n        this.ionChange.emit({\n            checked: isChecked,\n            value: this.value\n        });\n    };\n    Toggle.prototype.disabledChanged = function () {\n        this.ionStyle.emit({\n            'interactive-disabled': this.disabled,\n        });\n        if (this.gesture) {\n            this.gesture.setDisabled(this.disabled);\n        }\n    };\n    Toggle.prototype.componentWillLoad = function () {\n        this.ionStyle = deferEvent(this.ionStyle);\n    };\n    Toggle.prototype.componentDidLoad = function () {\n        return tslib_1.__awaiter(this, void 0, void 0, function () {\n            var parentItem, itemLabel, _a;\n            var _this = this;\n            return tslib_1.__generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        parentItem = this.nativeInput.closest('ion-item');\n                        if (parentItem) {\n                            itemLabel = parentItem.querySelector('ion-label');\n                            if (itemLabel) {\n                                itemLabel.id = this.inputId + '-lbl';\n                                this.nativeInput.setAttribute('aria-labelledby', itemLabel.id);\n                            }\n                        }\n                        _a = this;\n                        return [4 /*yield*/, import(\"./gesture.js\")];\n                    case 1:\n                        _a.gesture = (_b.sent()).createGesture({\n                            el: this.el,\n                            queue: this.queue,\n                            gestureName: 'toggle',\n                            gesturePriority: 100,\n                            threshold: 0,\n                            onStart: function (ev) { return _this.onStart(ev); },\n                            onMove: function (ev) { return _this.onMove(ev); },\n                            onEnd: function (ev) { return _this.onEnd(ev); },\n                        });\n                        this.disabledChanged();\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    Toggle.prototype.onStart = function (detail) {\n        this.pivotX = detail.currentX;\n        this.activated = true;\n        detail.event.preventDefault();\n        return true;\n    };\n    Toggle.prototype.onMove = function (detail) {\n        var currentX = detail.currentX;\n        if (shouldToggle(this.checked, currentX - this.pivotX, -15)) {\n            this.checked = !this.checked;\n            this.pivotX = currentX;\n            hapticSelection();\n        }\n    };\n    Toggle.prototype.onEnd = function (detail) {\n        var delta = detail.currentX - this.pivotX;\n        if (shouldToggle(this.checked, delta, 4)) {\n            this.checked = !this.checked;\n            hapticSelection();\n        }\n        this.activated = false;\n        this.nativeInput.focus();\n    };\n    Toggle.prototype.onChange = function () {\n        this.checked = !this.checked;\n    };\n    Toggle.prototype.onKeyUp = function () {\n        this.keyFocus = true;\n    };\n    Toggle.prototype.onFocus = function () {\n        this.ionFocus.emit();\n    };\n    Toggle.prototype.onBlur = function () {\n        this.keyFocus = false;\n        this.ionBlur.emit();\n    };\n    Toggle.prototype.hostData = function () {\n        return {\n            class: Object.assign({}, createColorClasses(this.color), { 'in-item': hostContext('ion-item', this.el), 'toggle-activated': this.activated, 'toggle-checked': this.checked, 'toggle-disabled': this.disabled, 'toggle-key': this.keyFocus, 'interactive': true })\n        };\n    };\n    Toggle.prototype.render = function () {\n        var _this = this;\n        renderHiddenInput(this.el, this.name, (this.checked ? this.value : ''), this.disabled);\n        return [\n            h(\"div\", { class: \"toggle-icon\" }, h(\"div\", { class: \"toggle-inner\" })),\n            h(\"input\", { type: \"checkbox\", onChange: this.onChange.bind(this), onFocus: this.onFocus.bind(this), onBlur: this.onBlur.bind(this), onKeyUp: this.onKeyUp.bind(this), checked: this.checked, id: this.inputId, name: this.name, value: this.value, disabled: this.disabled, ref: function (r) { return _this.nativeInput = r; } }),\n            h(\"slot\", null)\n        ];\n    };\n    Object.defineProperty(Toggle, \"is\", {\n        get: function () { return \"ion-toggle\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Toggle, \"encapsulation\", {\n        get: function () { return \"shadow\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Toggle, \"properties\", {\n        get: function () {\n            return {\n                \"activated\": {\n                    \"state\": true\n                },\n                \"checked\": {\n                    \"type\": Boolean,\n                    \"attr\": \"checked\",\n                    \"mutable\": true,\n                    \"watchCallbacks\": [\"checkedChanged\"]\n                },\n                \"color\": {\n                    \"type\": String,\n                    \"attr\": \"color\"\n                },\n                \"disabled\": {\n                    \"type\": Boolean,\n                    \"attr\": \"disabled\",\n                    \"watchCallbacks\": [\"disabledChanged\"]\n                },\n                \"el\": {\n                    \"elementRef\": true\n                },\n                \"keyFocus\": {\n                    \"state\": true\n                },\n                \"mode\": {\n                    \"type\": String,\n                    \"attr\": \"mode\"\n                },\n                \"name\": {\n                    \"type\": String,\n                    \"attr\": \"name\"\n                },\n                \"queue\": {\n                    \"context\": \"queue\"\n                },\n                \"value\": {\n                    \"type\": String,\n                    \"attr\": \"value\"\n                }\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Toggle, \"events\", {\n        get: function () {\n            return [{\n                    \"name\": \"ionChange\",\n                    \"method\": \"ionChange\",\n                    \"bubbles\": true,\n                    \"cancelable\": true,\n                    \"composed\": true\n                }, {\n                    \"name\": \"ionFocus\",\n                    \"method\": \"ionFocus\",\n                    \"bubbles\": true,\n                    \"cancelable\": true,\n                    \"composed\": true\n                }, {\n                    \"name\": \"ionBlur\",\n                    \"method\": \"ionBlur\",\n                    \"bubbles\": true,\n                    \"cancelable\": true,\n                    \"composed\": true\n                }, {\n                    \"name\": \"ionStyle\",\n                    \"method\": \"ionStyle\",\n                    \"bubbles\": true,\n                    \"cancelable\": true,\n                    \"composed\": true\n                }];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Toggle, \"style\", {\n        get: function () { return \".sc-ion-toggle-md-h{-webkit-box-sizing:content-box!important;box-sizing:content-box!important;display:inline-block;contain:content;cursor:pointer;-ms-touch-action:none;touch-action:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;--background:rgba(var(--ion-item-border-color-rgb, 0, 0, 0), 0.13);--background-checked:rgba(var(--ion-color-primary-rgb, 56, 128, 255), 0.5);--handle-background:var(--ion-background-color, #fff);--handle-background-checked:var(--ion-color-primary, #3880ff);padding:12px;-webkit-box-sizing:content-box;box-sizing:content-box;position:relative;width:36px;height:14px;contain:strict}.toggle-key.sc-ion-toggle-md-h   input.sc-ion-toggle-md{border:2px solid #5e9ed6}.sc-ion-toggle-md-h:focus{outline:0}.toggle-disabled.sc-ion-toggle-md-h{pointer-events:none;opacity:.3}input.sc-ion-toggle-md{left:0;top:0;margin:0;position:absolute;width:100%;height:100%;border:0;background:0 0;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:0;pointer-events:none}.ion-color.toggle-checked.sc-ion-toggle-md-h   .toggle-icon.sc-ion-toggle-md{background:rgba(var(--ion-color-base-rgb),.5)}.ion-color.toggle-checked.sc-ion-toggle-md-h   .toggle-inner.sc-ion-toggle-md{background:var(--ion-color-base)}.toggle-icon.sc-ion-toggle-md{border-radius:14px;display:block;position:relative;width:100%;height:100%;-webkit-transition:background-color .3s;transition:background-color .3s;background:var(--background);pointer-events:none}.toggle-inner.sc-ion-toggle-md{left:0;top:-3px;border-radius:50%;position:absolute;width:20px;height:20px;-webkit-transition-duration:.3s;transition-duration:.3s;-webkit-transition-property:background-color,-webkit-transform;transition-property:background-color,-webkit-transform;transition-property:transform,background-color;transition-property:transform,background-color,-webkit-transform;background:var(--handle-background);-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12);will-change:transform,background-color;contain:strict}.toggle-checked.sc-ion-toggle-md-h   .toggle-icon.sc-ion-toggle-md{background:var(--background-checked)}.toggle-checked.sc-ion-toggle-md-h   .toggle-inner.sc-ion-toggle-md{-webkit-transform:translate3d(16px,0,0);transform:translate3d(16px,0,0);background:var(--handle-background-checked)}.in-item[slot].sc-ion-toggle-md-h{margin:0;padding:12px 8px 12px 16px;cursor:pointer}.in-item[slot=start].sc-ion-toggle-md-h{padding:12px 18px 12px 2px}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Toggle, \"styleMode\", {\n        get: function () { return \"md\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return Toggle;\n}());\nfunction shouldToggle(checked, deltaX, margin) {\n    var isRTL = document.dir === 'rtl';\n    if (checked) {\n        return (!isRTL && (margin > deltaX)) ||\n            (isRTL && (-margin < deltaX));\n    }\n    else {\n        return (!isRTL && (-margin < deltaX)) ||\n            (isRTL && (margin > deltaX));\n    }\n}\nvar toggleIds = 0;\nexport { Toggle as IonToggle };\n"],"sourceRoot":""}